version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: ebay_trends_postgres
    environment:
      POSTGRES_DB: ebay_trends
      POSTGRES_USER: ebayuser
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ebay_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ebayuser -d ebay_trends"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ebay_trends_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ebay_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ebay_trends_backend
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://ebayuser:${DATABASE_PASSWORD}@postgres:5432/ebay_trends
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      EBAY_CLIENT_ID: ${EBAY_CLIENT_ID}
      EBAY_CLIENT_SECRET: ${EBAY_CLIENT_SECRET}
      EBAY_REDIRECT_URI: ${EBAY_REDIRECT_URI}
      EBAY_ENVIRONMENT: ${EBAY_ENVIRONMENT:-sandbox}
    volumes:
      - ./backend:/app
    networks:
      - ebay_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ebay_trends_celery_worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://ebayuser:${DATABASE_PASSWORD}@postgres:5432/ebay_trends
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      EBAY_CLIENT_ID: ${EBAY_CLIENT_ID}
      EBAY_CLIENT_SECRET: ${EBAY_CLIENT_SECRET}
      EBAY_REDIRECT_URI: ${EBAY_REDIRECT_URI}
      EBAY_ENVIRONMENT: ${EBAY_ENVIRONMENT:-sandbox}
    volumes:
      - ./backend:/app
    networks:
      - ebay_network
    command: celery -A app.celery_app worker --loglevel=info

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ebay_trends_celery_beat
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://ebayuser:${DATABASE_PASSWORD}@postgres:5432/ebay_trends
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      EBAY_CLIENT_ID: ${EBAY_CLIENT_ID}
      EBAY_CLIENT_SECRET: ${EBAY_CLIENT_SECRET}
      EBAY_REDIRECT_URI: ${EBAY_REDIRECT_URI}
      EBAY_ENVIRONMENT: ${EBAY_ENVIRONMENT:-sandbox}
    volumes:
      - ./backend:/app
    networks:
      - ebay_network
    command: celery -A app.celery_app beat --loglevel=info

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ebay_trends_frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:8000/api}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - ebay_network
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  redis_data:

networks:
  ebay_network:
    driver: bridge
