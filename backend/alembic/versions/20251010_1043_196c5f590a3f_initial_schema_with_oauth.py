"""initial_schema_with_oauth

Revision ID: 196c5f590a3f
Revises: 
Create Date: 2025-10-10 10:43:17.556934+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '196c5f590a3f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('business_name', sa.String(length=255), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tenants_email'), 'tenants', ['email'], unique=True)
    op.create_table('oauth_credentials',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('access_token_encrypted', sa.LargeBinary(), nullable=False),
    sa.Column('access_token_iv', sa.LargeBinary(), nullable=False),
    sa.Column('access_token_auth_tag', sa.LargeBinary(), nullable=False),
    sa.Column('refresh_token_encrypted', sa.LargeBinary(), nullable=False),
    sa.Column('refresh_token_iv', sa.LargeBinary(), nullable=False),
    sa.Column('refresh_token_auth_tag', sa.LargeBinary(), nullable=False),
    sa.Column('access_token_expires_at', sa.DateTime(), nullable=False),
    sa.Column('refresh_token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('scopes', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('is_valid', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_oauth_credentials_tenant_id'), 'oauth_credentials', ['tenant_id'], unique=True)
    op.create_table('ebay_accounts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('oauth_credential_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('ebay_user_id', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('marketplace_id', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_sync_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['oauth_credential_id'], ['oauth_credentials.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ebay_accounts_ebay_user_id'), 'ebay_accounts', ['ebay_user_id'], unique=True)
    op.create_index(op.f('ix_ebay_accounts_oauth_credential_id'), 'ebay_accounts', ['oauth_credential_id'], unique=False)
    op.create_index(op.f('ix_ebay_accounts_tenant_id'), 'ebay_accounts', ['tenant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ebay_accounts_tenant_id'), table_name='ebay_accounts')
    op.drop_index(op.f('ix_ebay_accounts_oauth_credential_id'), table_name='ebay_accounts')
    op.drop_index(op.f('ix_ebay_accounts_ebay_user_id'), table_name='ebay_accounts')
    op.drop_table('ebay_accounts')
    op.drop_index(op.f('ix_oauth_credentials_tenant_id'), table_name='oauth_credentials')
    op.drop_table('oauth_credentials')
    op.drop_index(op.f('ix_tenants_email'), table_name='tenants')
    op.drop_table('tenants')
    # ### end Alembic commands ###
